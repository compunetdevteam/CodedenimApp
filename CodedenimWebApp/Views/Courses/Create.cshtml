@using CodedenimWebApp.Extensions
@model CodeninModel.Course
@{
    ViewBag.Title = "Create Courses";
    Layout = "~/Views/Shared/_LayoutBoard.cshtml";
}

<div class="container-fluid">


    @using (Html.BeginForm("Create", "Courses", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>COURSE</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @*<div class="form-group">
                @Html.LabelFor(model => model.CourseCategoryId, "CourseCategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CourseCategoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CourseCategoryId, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.CourseCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CourseCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CourseCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                </div>
            </div>
            
            @*<div class="form-group">
                @Html.LabelFor(model => model.CoursePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CoursePrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CoursePrice, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.CourseDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CourseDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CourseDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExpectedTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpectedTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExpectedTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control datepicker", @readonly=true } })
                    @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Points, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.Label("Photo", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="File" name="File" />
                </div>
            </div>
            
            @*<div class="form-group">
                @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="editor-field">
                    @Html.FileFor(model => model.File)
                    @Html.ValidationMessageFor(model => model.File)
                </div>
            </div*@>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-6">
                    <button class="btn btn-success">Create</button>
                </div>
            </div>
        </div>
    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
    </div>

<script type="text/javascript">
    $(document).ready(function () {
        $('.datepicker').datepicker(
            {
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            }
        );

    });
</script> 