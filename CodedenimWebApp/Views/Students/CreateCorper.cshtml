@model CodedenimWebApp.Models.RegisterCorperModel

@{
    ViewBag.Title = "CreateCorper";
    Layout = "~/Views/Shared/_LayoutWeb.cshtml";
}

<h2>CreateCorper</h2>

@using(Html.BeginForm("RegisterCorper", "Account"))
{
@*<form class="table table-bordered" id="form" enctype=multipart/form-data method="post">*@ 

            @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.CallUpNumber, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.CallUpNumber, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.CallUpNumber, "", new {@class = "text-danger"})
        </div>
    </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Active)
                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateOfBirth, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NyscState, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(
                x => x.NyscState,"Select My Type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.NyscState, "", new { @class = "text-danger" })
        </div>
    </div>

    
    <div class="form-group">
        @Html.LabelFor(model => model.NyscBatch, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.NyscBatch, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NyscBatch, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.MobileNumber, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.MobileNumber, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Gender, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Gender, "", new {@class = "text-danger"})
        </div>
    </div>

   <div class="form-group">
                     @Html.LabelFor(model => model.Institution, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                                @Html.EditorFor(model => model.Institution, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Institution, "", new { @class = "text-danger" })
        </div>
        </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
        </div>
    </div>

    @*<div class="form-group">
                 @Html.LabelFor(model => model.EnrollmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                            @Html.EditorFor(model => model.EnrollmentDate, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.EnrollmentDate, "", new { @class = "text-danger" })
    </div>
    </div>*@

    <div class="form-group">
        @Html.Label("Photo", new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <input type="file" id="File" name="File"/>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}'